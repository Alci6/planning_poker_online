{"version":3,"sources":["serviceWorker.js","TitleBar.js","Attribution.js","Cartas.js","Baraja.js","CardList.js","Table.js","App.js","index.js"],"names":["Boolean","window","location","hostname","match","TitleBar","className","Attribution","href","role","aria-label","Cartas","value","id","baraja","deck","CardList","deckSelected","cardFiltered","filter","item","cardValue","map","index","key","Table","useState","setDeck","onClick","console","log","App","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.97db22e2.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\n\n\n\n\nfunction TitleBar() {\n  return (\n\n      <header className=\"bg-white black-80 tc pv1 avenir\">\n        <h1 className=\"mt2 mb0 fw2 f3 avenir\">Planning Poker Online</h1>\n          <h2 className=\"mt2 mb0 f6 fw4 avenir\">Choose your Card</h2>\n      </header>\n  );\n}\n\nexport default TitleBar;\n","import React from \"react\";\n\n\n\n\nfunction Attribution() {\n  return (\n  <div className=\"mb4 tc\">\n    <p className=\"f7 black-80 fw2 dib pa3 avenir\" href=\"/\">made with <span role=\"img\" aria-label=\"heart\"> ❤️</span>by Alcibiades Cabral Díaz</p>\n  </div>\n\n  );\n}\n\nexport default Attribution;\n","import React from \"react\";\nimport \"./Cartas.css\";\n\n\n\nfunction Cartas({value}) {\n  return (\n\n    <div  className=\"carta grow center ma1\">\n        <p id=\"cardRender\" className=\"noselect avenir dtc v-mid  tc w4 f1\">{value}</p>\n    </div>\n  );\n}\n\nexport default Cartas;\n","export const baraja = [\n  {\n    // T-SHIRT\n    value: \"XS\",\n    deck: \"tshirt\"\n  },\n  {\n    value: \"S\",\n    deck: \"tshirt\"\n  },\n  {\n    value: \"M\",\n    deck: \"tshirt\"\n  },\n  {\n    value: \"L\",\n    deck: \"tshirt\"\n  },\n  {\n    value: \"XL\",\n    deck: \"tshirt\"\n  },\n  {\n    value: \"XXL\",\n    deck: \"tshirt\"\n  },\n  {\n    // STORYPOINTS\n    value: \"0\",\n    deck: \"storyPoints\"\n  },\n  {\n    value: \"1/2\",\n    deck: \"storyPoints\"\n  },\n  {\n    value: \"1\",\n    deck: \"storyPoints\"\n  },\n  {\n    value: \"2\",\n    deck: \"storyPoints\"\n  },\n  {\n    value: \"3\",\n    deck: \"storyPoints\"\n  },\n  {\n    value: \"5\",\n    deck: \"storyPoints\"\n  },\n  {\n    value: \"8\",\n    deck: \"storyPoints\"\n  },\n  {\n    value: \"13\",\n    deck: \"storyPoints\"\n  },\n  {\n    value: \"21\",\n    deck: \"storyPoints\"\n  },\n  {\n    value: \"40\",\n    deck: \"storyPoints\"\n  },\n  {\n    value: \"100\",\n    deck: \"storyPoints\"\n  },\n  {\n    // FIBONACCI\n    value: \"0\",\n    deck: \"fibonacci\"\n  },\n  {\n    value: \"1\",\n    deck: \"fibonacci\"\n  },\n  {\n    value: \"2\",\n    deck: \"fibonacci\"\n  },\n  {\n    value: \"3\",\n    deck: \"fibonacci\"\n  },\n  {\n    value: \"5\",\n    deck: \"fibonacci\"\n  },\n  {\n    value: \"8\",\n    deck: \"fibonacci\"\n  },\n  {\n    value: \"13\",\n    deck: \"fibonacci\"\n  },\n  {\n    value: \"21\",\n    deck: \"fibonacci\"\n  },\n  {\n    value: \"34\",\n    deck: \"fibonacci\"\n  },\n  {\n    value: \"55\",\n    deck: \"fibonacci\"\n  },\n  {\n    value: \"89\",\n    deck: \"fibonacci\"\n  },\n  {\n    value: \"144\",\n    deck: \"fibonacci\"\n  },\n  { // COMMON\n    value: \"?\",\n    deck: \"common\",\n  }\n];\n","import React from \"react\";\nimport Cartas from \"./Cartas\";\nimport { baraja } from \"./Baraja\";\n\n\n\nconst CardList = ({deckSelected}) => {\n\n\n  // filter the decks with the deck value and common cards like \"?\"\n  const cardFiltered = baraja.filter(\n\n    item => item.deck === deckSelected || item.deck === \"common\"\n  );\n  \n  // render the cardValue filtered with map and inser a Key = card value.\n  const cardValue = cardFiltered.map((item, index) => {\n    return (\n      <Cartas\n        key={cardFiltered[index].value}\n        value={cardFiltered[index].value}\n      />\n    );\n  });\n  return <>{cardValue}</>;\n};\n\nexport default CardList;\n","import React, { useState } from \"react\";\nimport \"./Table.css\";\nimport CardList from \"./CardList\";\n\nfunction Table() {\n  let [deck, setDeck] = useState(\"fibonacci\");\n\n  return (\n    <>\n      <CardList deckSelected={deck} />\n\n      <footer id=\"footerBtm\" className=\"bg-white black-80 tc avenir\">\n        <nav className=\"bt tc mw7 center \">\n          <p\n            onClick={() => {\n              setDeck((deck = \"storyPoints\"));\n            }}\n            className=\"noselect f5 f5-l link bg-animate black-80 hover-light-purple dib ph4 linkBtm\"\n          >\n            StoryPoints\n          </p>\n          <p\n            onClick={() => {\n              setDeck((deck = \"tshirt\"));\n              console.log(`you changed the deck to: ${deck}`);\n            }}\n            className=\"noselect f5 f5-l link bg-animate black-80 hover-light-purple dib ph4 linkBtm\"\n          >\n            T-Shirt\n          </p>\n          <p\n            onClick={() => {\n              setDeck((deck = \"fibonacci\"));\n              console.log(`you changed the deck to: ${deck}`);\n            }}\n            className=\"noselect f5 f5-l link bg-animate black-80 hover-light-purple dib ph4 linkBtm\"\n          >\n            Fibonacci\n          </p>\n        </nav>\n      </footer>\n    </>\n  );\n}\n\nexport default Table;\n","import React from \"react\";\nimport TitleBar from \"./TitleBar\";\nimport Attribution from \"./Attribution\";\nimport Table from \"./Table\";\n\nconst App = () => {\n\t return(\n    <>\n     <TitleBar />\n     <div className=\"flex flex-wrap\"><Table/></div>\n     <div className=\"mb4 tc\">\n     <Attribution />\n     </div>\n\n\n    </>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport \"tachyons\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}